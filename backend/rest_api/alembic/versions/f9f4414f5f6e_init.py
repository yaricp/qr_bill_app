"""init

Revision ID: f9f4414f5f6e
Revises: 
Create Date: 2024-08-27 17:58:10.736165

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f9f4414f5f6e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
# ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('ticket_number', sa.INTEGER(), nullable=True),
    sa.Column('name', sa.VARCHAR(length=150), nullable=True),
    sa.Column('email', sa.VARCHAR(length=200), nullable=True),
    sa.Column('photo', sa.VARCHAR(length=200000), nullable=True),
    sa.Column('paid_media_type', sa.VARCHAR(), nullable=True),
    sa.Column('date_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('phone', sa.VARCHAR(length=20), nullable=True),
    sa.Column('tg_id', sa.VARCHAR(length=20), nullable=True),
    sa.Column('tg_user', sa.VARCHAR(length=30), nullable=True),
    sa.Column('postsale', sa.BOOLEAN(), nullable=True),
    sa.Column('lang', sa.VARCHAR(length=2), nullable=True),
    sa.Column('progress_session', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('date_time_send_email', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('package_types',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), nullable=True),
    sa.Column('qr_name', sa.VARCHAR(length=10), nullable=True),
    sa.Column('make_photos', sa.BOOLEAN(), nullable=True),
    sa.Column('copy_sources', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('settings',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), nullable=False),
    sa.Column('value', sa.VARCHAR(length=150), nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), nullable=True),
    sa.Column('conductor', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('source_types',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), nullable=True),
    sa.Column('category', sa.VARCHAR(length=10), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('time_slots',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('start_datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('end_datetime', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=200), nullable=True),
    sa.Column('login', sa.VARCHAR(length=150), nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=4000), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('video_filter',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), nullable=True),
    sa.Column('ffmpeg_name', sa.VARCHAR(length=50), nullable=False),
    sa.Column('params', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('devices',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), nullable=True),
    sa.Column('type_source_id', sa.INTEGER(), nullable=True),
    sa.Column('serial_number', sa.VARCHAR(length=500), nullable=False),
    sa.Column('note', sa.VARCHAR(length=1000), nullable=True),
    sa.Column('has_folder', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['type_source_id'], ['source_types.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('serial_number')
    )
    op.create_table('ipfs_user',
    sa.Column('ipfs_user_id', sa.INTEGER(), nullable=False),
    sa.Column('customer_id', sa.INTEGER(), nullable=False),
    sa.Column('ipfs_token', sa.VARCHAR(length=512), nullable=True),
    sa.Column('ipfs_token_expired', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ipfs_user_id')
    )
    op.create_table('montage',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('customer_id', sa.INTEGER(), nullable=True),
    sa.Column('custom_montage', sa.VARCHAR(length=100), nullable=True),
    sa.Column('date_time_start_montage', sa.TIMESTAMP(), nullable=True),
    sa.Column('date_time_end_montage', sa.TIMESTAMP(), nullable=True),
    sa.Column('montage_status', sa.VARCHAR(length=20), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scenario',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), nullable=True),
    sa.Column('settings', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('in_use', sa.BOOLEAN(), nullable=True),
    sa.Column('preview', sa.BOOLEAN(), nullable=True),
    sa.Column('type_package_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['type_package_id'], ['package_types.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tickets',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('read_ticket_date_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('type_of_service', sa.VARCHAR(length=150), nullable=True),
    sa.Column('link_to_pc', sa.VARCHAR(length=1000), nullable=True),
    sa.Column('preview', sa.BOOLEAN(), nullable=True),
    sa.Column('paid', sa.BOOLEAN(), nullable=True),
    sa.Column('customer_id', sa.INTEGER(), nullable=True),
    sa.Column('time_slot_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['time_slot_id'], ['time_slots.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('type_package_to_type_source',
    sa.Column('type_id', sa.INTEGER(), nullable=False),
    sa.Column('typesource_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['package_types.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['typesource_id'], ['source_types.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('type_id', 'typesource_id')
    )
    op.create_table('ipfs_data',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('ipfs_user_id', sa.INTEGER(), nullable=True),
    sa.Column('size', sa.FLOAT(), nullable=True),
    sa.Column('must_delete', sa.TIMESTAMP(), nullable=False),
    sa.Column('uploaded', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['ipfs_user_id'], ['ipfs_user.ipfs_user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sources',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('path_video_source', sa.VARCHAR(length=150), nullable=True),
    sa.Column('type_source_id', sa.INTEGER(), nullable=True),
    sa.Column('delta', sa.INTEGER(), nullable=True),
    sa.Column('date_time_start_record', sa.TIMESTAMP(), nullable=True),
    sa.Column('device_id', sa.INTEGER(), nullable=True),
    sa.Column('ticket_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['type_source_id'], ['source_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ticket_to_device',
    sa.Column('ticket_id', sa.INTEGER(), nullable=False),
    sa.Column('device_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ticket_id', 'device_id')
    )
    op.create_table('type_package_to_device',
    sa.Column('type_id', sa.INTEGER(), nullable=False),
    sa.Column('device_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['type_id'], ['package_types.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('type_id', 'device_id')
    )
    # ### end Alembic commands ###


def downgrade():
# ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('type_package_to_device')
    op.drop_table('ticket_to_device')
    op.drop_table('sources')
    op.drop_table('ipfs_data')
    op.drop_table('type_package_to_type_source')
    op.drop_table('tickets')
    op.drop_table('scenario')
    op.drop_table('montage')
    op.drop_table('ipfs_user')
    op.drop_table('devices')
    op.drop_table('video_filter')
    op.drop_table('users')
    op.drop_table('time_slots')
    op.drop_table('source_types')
    op.drop_table('settings')
    op.drop_table('package_types')
    op.drop_table('customers')
    # ### end Alembic commands ###
