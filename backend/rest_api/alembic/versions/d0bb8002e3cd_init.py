"""init

Revision ID: d0bb8002e3cd
Revises: 
Create Date: 2025-01-08 21:12:14.091293

"""
from alembic import op
import sqlalchemy as sa
# import geoalchemy2


# revision identifiers, used by Alembic.
revision = 'd0bb8002e3cd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
# ### commands auto generated by Alembic - please adjust! ###
    op.create_table('seller',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), nullable=False),
    sa.Column('official_name', sa.VARCHAR(length=250), nullable=False),
    sa.Column('address', sa.VARCHAR(length=150), nullable=True),
    sa.Column('city', sa.VARCHAR(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('unit',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=150), nullable=True),
    sa.Column('phone', sa.VARCHAR(length=14), nullable=True),
    sa.Column('login', sa.VARCHAR(length=150), nullable=True),
    sa.Column('tg_name', sa.VARCHAR(length=150), nullable=True),
    sa.Column('tg_id', sa.INTEGER(), nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=4000), nullable=True),
    sa.Column('lang', sa.VARCHAR(length=4), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('bill',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('value', sa.DECIMAL(precision=6, scale=2), nullable=False),
    sa.Column('payment_method', sa.VARCHAR(length=50), nullable=True),
    sa.Column('picture_path', sa.VARCHAR(length=255), nullable=True),
    sa.Column('seller_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['seller_id'], ['seller.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('category',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('test', sa.VARCHAR(length=150), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('login_link',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('link', sa.VARCHAR(length=255), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('goods',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), nullable=False),
    sa.Column('quantity', sa.DECIMAL(precision=6, scale=4), nullable=False),
    sa.Column('unit_price_before_vat', sa.DECIMAL(precision=6, scale=4), nullable=False),
    sa.Column('unit_price_after_vat', sa.DECIMAL(precision=6, scale=4), nullable=False),
    sa.Column('rebate', sa.DECIMAL(precision=6, scale=4), nullable=False),
    sa.Column('rebate_reducing', sa.BOOLEAN(), nullable=True),
    sa.Column('price_before_vat', sa.DECIMAL(precision=6, scale=4), nullable=False),
    sa.Column('vat_rate', sa.Integer(), nullable=False),
    sa.Column('vat_amount', sa.DECIMAL(precision=6, scale=4), nullable=False),
    sa.Column('price_after_vat', sa.DECIMAL(precision=6, scale=4), nullable=False),
    sa.Column('unit_id', sa.UUID(), nullable=False),
    sa.Column('bill_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('seller_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['bill_id'], ['bill.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['seller_id'], ['seller.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
# ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('goods')
    op.drop_table('login_link')
    op.drop_table('category')
    op.drop_table('bill')
    op.drop_table('users')
    op.drop_table('unit')
    op.drop_table('seller')
    # ### end Alembic commands ###
