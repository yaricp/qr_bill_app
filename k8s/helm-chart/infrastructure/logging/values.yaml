grafana:
  enabled: true
  adminUser: admin
  adminPassword: admin
  service:
    type: NodePort
    port: 3000
    nodePort: 30832
  ingress:
    enabled: false

loki:
  enabled: true
  podSecurityPolicy:
    enabled: false
  persistence:
    enabled: true
    size: 5Gi
  loki:
    auth_enabled: false
    commonConfig:
      replication_factor: 1
    storage:
      type: 'filesystem'
  singleBinary:
    replicas: 1

promtail:
  enabled: true

  # ServiceAccount и RBAC
  serviceAccount:
    create: true
    name: promtail
  rbac:
    create: true
    clusterRole:
      rules:
        - apiGroups: [""]
          resources: ["pods", "namespaces"]
          verbs: ["get", "list", "watch"]

  # Путь для хранения позиций
  config:
    clients:
      - url: http://loki:3100/loki/api/v1/push
    positions:
      filename: /run/promtail/positions.yaml
    scrape_configs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__meta_kubernetes_pod_label_app]
            target_label: app
          - action: replace
            source_labels: [__meta_kubernetes_pod_container_name]
            target_label: container
        # Фильтруем только нужный namespace
        pipeline_stages:
          - match:
              selector: '{namespace="qracun-test"}'
              stages:
                - json:
                    expressions:
                      log: log

  # Монтируем логи и positions.yaml
  extraVolumeMounts:
    - name: varlog
      mountPath: /var/log/pods
      readOnly: true
    - name: promtail-positions
      mountPath: /run/promtail
  extraVolumes:
    - name: varlog
      hostPath:
        path: /var/log/pods
    - name: promtail-positions
      emptyDir: {}