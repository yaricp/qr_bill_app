apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pg
  template:
    metadata:
      labels:
        app: pg
    spec:
      containers:
        - name: postgres
          image: postgres:17.5
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: qracun-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: qracun-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: qracun-secret
                  key: POSTGRES_DB
          volumeMounts:
            - name: pg-data
              mountPath: /var/lib/postgresql/data
        
        - name: pgbackrest
          image: perconalab/percona-pgbackrest:2.55.0
          command: ["/bin/sh", "-c"]
          args:
            - |
              # создаём stanza, если её ещё нет
              pgbackrest --stanza=main --pg1-path=/var/lib/postgresql/data stanza-create || true
              # ждем команд на бэкап (например, через cronjob)
              tail -f /dev/null
          env:
            - name: PGBACKREST_REPO1_PATH
              value: /backups
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: qracun-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: qracun-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: qracun-secret
                  key: POSTGRES_DB
          volumeMounts:
            - name: pg-data
              mountPath: /var/lib/postgresql/data
              readOnly: true
            - name: backups
              mountPath: /backups

      volumes:
        - name: pg-data
          persistentVolumeClaim:
            claimName: pg-pvc
        - name: backups
          persistentVolumeClaim:
            claimName: pgbackrest-pvc
