apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pg
  template:
    metadata:
      labels:
        app: pg
    spec:
      securityContext:
        runAsUser: 999   # UID postgres
        runAsGroup: 999  # GID postgres
        fsGroup: 999
      containers:
        - name: postgres
          image: postgres:17.5
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: qracun-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: qracun-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: qracun-secret
                  key: POSTGRES_DB
          volumeMounts:
            - name: pg-data
              mountPath: /var/lib/postgresql/data
        
        - name: pgbackrest
          image: perconalab/percona-pgbackrest:2.55.0
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -e
              CONF=$PGBACKREST_CONFIG

              # создаём конфиг, если его нет
              if [ ! -f "$CONF" ]; then
              mkdir -p /var/lib/pgbackrest
              cat > "$CONF" <<EOF
              [main]
              pg1-path=/var/lib/postgresql/data

              [global]
              repo1-path=/var/lib/pgbackrest
              log-level-console=info
              EOF
              fi

              # создаём stanza, если её нет
              if ! pgbackrest --stanza=main info >/dev/null 2>&1; then
                pgbackrest --stanza=main stanza-create
              fi

              # ждём команд на бэкап
              tail -f /dev/null
          env:
            - name: PGBACKREST_CONFIG
              value: /var/lib/pgbackrest/pgbackrest.conf
            - name: PGBACKREST_REPO1_PATH
              value: /backups
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: qracun-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: qracun-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: qracun-secret
                  key: POSTGRES_DB
          volumeMounts:
            - name: pg-data
              mountPath: /var/lib/postgresql/data
              readOnly: true
            - name: backups
              mountPath: /backups

      volumes:
        - name: pg-data
          persistentVolumeClaim:
            claimName: pg-pvc
        - name: backups
          persistentVolumeClaim:
            claimName: pgbackrest-pvc
