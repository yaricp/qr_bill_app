name: test
on:
  push:
    branches:
      - dev

jobs:

  test-build-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_RUNNER }}
      - name: Check changes in backend/rest_api
        id: rest_api_changed
        run: |
          OUTPUT=$( git diff HEAD\^ HEAD -- backend/rest_api | tail -1) &&
          echo "::set-output name=OUTPUT::$OUTPUT"
      - name: Check changes in backend/telegram_bot
        id: tg_changed
        run: |
          OUTPUT=$( git diff HEAD\^ HEAD -- backend/tg_bot | tail -1) &&
          echo "::set-output name=OUTPUT::$OUTPUT"
      - name: Check changes in frontend
        id: frontend_changes
        run: |
          OUTPUT=$( git diff HEAD\^ HEAD -- frontend | tail -1) &&
          echo "::set-output name=OUTPUT::$OUTPUT"
      - name: Build and push rest_api image. 
        if: ${{ (steps.rest_api_changed.outputs.OUTPUT != '')}}
        env:
          NAME_IMAGE_API: ${{ vars.NAME_IMAGE_API }}
          NAME_IMAGE_FRONTEND: ${{ vars.NAME_IMAGE_FRONTEND }}
          NAME_IMAGE_TELEGRAM_BOT: ${{ vars.NAME_IMAGE_TELEGRAM_BOT }}
          DEBUG: ${{ vars.DEBUG }}
          INSTALL_DEV: ${{ vars.INSTALL_DEV }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TOKEN_EXPIRY_TIME_HOURS: ${{ vars.TOKEN_EXPIRY_TIME_HOURS }}
          FISCAL_SERVICE_HOSTNAME: ${{ vars.FISCAL_SERVICE_HOSTNAME }}
          FISCAL_SERVICE_URI: ${{ vars.FISCAL_SERVICE_URI }}
          FISCAL_SERVICE_API_URI: ${{ vars.FISCAL_SERVICE_API_URI }}
          TIME_LIFE_TEMP_LOGIN_LINK_MIN: ${{ vars.TIME_LIFE_TEMP_LOGIN_LINK_MIN }}
          FRONTEND_APP_LOGIN_LINK_PREFIX: ${{ vars.FRONTEND_APP_LOGIN_LINK_PREFIX }}
          REST_API_HOST: ${{ vars.REST_API_HOST }}
          REST_API_PORT: ${{ vars.REST_API_PORT }}
          REST_API_PREFIX: ${{ vars.REST_API_PREFIX }}
          REST_API_LOGIN_LINK_URI: ${{ vars.REST_API_LOGIN_LINK_URI }}
          DATABASE_DIALECT: ${{ vars.DATABASE_DIALECT }}
          DATABASE_DRIVER: ${{ vars.DATABASE_DRIVER }}
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          DATABASE_PORT: ${{ vars.DATABASE_PORT }}
          DATABASE_USER: ${{ vars.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ vars.DATABASE_NAME }}
          DATABASE_ECHO: ${{ vars.DATABASE_ECHO }}
          DATABASE_POOL_RECYCLE: ${{ vars.DATABASE_POOL_RECYCLE }}
          DATABASE_POOL_PRE_PING: ${{ vars.DATABASE_POOL_PRE_PING }}
          DATABASE_AUTO_FLUSH: ${{ vars.DATABASE_AUTO_FLUSH }}
          DATABASE_EXPIRE_ON_COMMIT: ${{ vars.DATABASE_EXPIRE_ON_COMMIT }}
          UNICORN_HOST: ${{ vars.UNICORN_HOST }}
          UNICORN_PORT: ${{ vars.UNICORN_PORT }}
          UNICORN_LOG_LEVEL: ${{ vars.UNICORN_LOG_LEVEL }}
          UNICORN_RELOAD: ${{ vars.UNICORN_RELOAD }}
          UNICORN_WORKERS: ${{ vars.UNICORN_WORKERS }}
          ALLOW_ORIGINS: ${{ vars.ALLOW_ORIGINS }}
          ALLOW_HEADERS: ${{ vars.ALLOW_HEADERS }}
          ALLOW_CREDENTIALS: ${{ vars.ALLOW_CREDENTIALS }}
          ALLOW_METHODS: ${{ vars.ALLOW_METHODS }}
          PGADMIN_DEFAULT_EMAIL: ${{ vars.PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_BOT_DEFAULT_LANG: ${{ vars.TELEGRAM_BOT_DEFAULT_LANG }}
          TELEGRAM_ADMIN_CHAT_ID: ${{ vars.TELEGRAM_ADMIN_CHAT_ID }}
          TELEGRAM_GRPC_HOST: ${{ vars.TELEGRAM_GRPC_HOST }}
          TELEGRAM_GRPC_PORT: ${{ vars.TELEGRAM_GRPC_PORT }}
        run: |
          docker compose build api;
          docker compose push api;
      - name: Run unittests for rest_api. 
        if: ${{ (steps.rest_api_changed.outputs.OUTPUT != '')}}
        env:
          NAME_IMAGE_API: ${{ vars.NAME_IMAGE_API }}
          NAME_IMAGE_FRONTEND: ${{ vars.NAME_IMAGE_FRONTEND }}
          NAME_IMAGE_TELEGRAM_BOT: ${{ vars.NAME_IMAGE_TELEGRAM_BOT }}
          DEBUG: ${{ vars.DEBUG }}
          INSTALL_DEV: ${{ vars.INSTALL_DEV }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TOKEN_EXPIRY_TIME_HOURS: ${{ vars.TOKEN_EXPIRY_TIME_HOURS }}
          FISCAL_SERVICE_HOSTNAME: ${{ vars.FISCAL_SERVICE_HOSTNAME }}
          FISCAL_SERVICE_URI: ${{ vars.FISCAL_SERVICE_URI }}
          FISCAL_SERVICE_API_URI: ${{ vars.FISCAL_SERVICE_API_URI }}
          TIME_LIFE_TEMP_LOGIN_LINK_MIN: ${{ vars.TIME_LIFE_TEMP_LOGIN_LINK_MIN }}
          FRONTEND_APP_LOGIN_LINK_PREFIX: ${{ vars.FRONTEND_APP_LOGIN_LINK_PREFIX }}
          REST_API_HOST: ${{ vars.REST_API_HOST }}
          REST_API_PORT: ${{ vars.REST_API_PORT }}
          REST_API_PREFIX: ${{ vars.REST_API_PREFIX }}
          REST_API_LOGIN_LINK_URI: ${{ vars.REST_API_LOGIN_LINK_URI }}
          DATABASE_DIALECT: ${{ vars.DATABASE_DIALECT }}
          DATABASE_DRIVER: ${{ vars.DATABASE_DRIVER }}
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          DATABASE_PORT: ${{ vars.DATABASE_PORT }}
          DATABASE_USER: ${{ vars.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ vars.DATABASE_NAME }}
          DATABASE_ECHO: ${{ vars.DATABASE_ECHO }}
          DATABASE_POOL_RECYCLE: ${{ vars.DATABASE_POOL_RECYCLE }}
          DATABASE_POOL_PRE_PING: ${{ vars.DATABASE_POOL_PRE_PING }}
          DATABASE_AUTO_FLUSH: ${{ vars.DATABASE_AUTO_FLUSH }}
          DATABASE_EXPIRE_ON_COMMIT: ${{ vars.DATABASE_EXPIRE_ON_COMMIT }}
          UNICORN_HOST: ${{ vars.UNICORN_HOST }}
          UNICORN_PORT: ${{ vars.UNICORN_PORT }}
          UNICORN_LOG_LEVEL: ${{ vars.UNICORN_LOG_LEVEL }}
          UNICORN_RELOAD: ${{ vars.UNICORN_RELOAD }}
          UNICORN_WORKERS: ${{ vars.UNICORN_WORKERS }}
          ALLOW_ORIGINS: ${{ vars.ALLOW_ORIGINS }}
          ALLOW_HEADERS: ${{ vars.ALLOW_HEADERS }}
          ALLOW_CREDENTIALS: ${{ vars.ALLOW_CREDENTIALS }}
          ALLOW_METHODS: ${{ vars.ALLOW_METHODS }}
          PGADMIN_DEFAULT_EMAIL: ${{ vars.PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_BOT_DEFAULT_LANG: ${{ vars.TELEGRAM_BOT_DEFAULT_LANG }}
          TELEGRAM_ADMIN_CHAT_ID: ${{ vars.TELEGRAM_ADMIN_CHAT_ID }}
          TELEGRAM_GRPC_HOST: ${{ vars.TELEGRAM_GRPC_HOST }}
          TELEGRAM_GRPC_PORT: ${{ vars.TELEGRAM_GRPC_PORT }}
        run: |
          echo "Testing";
          # docker compose up -d;
          # docker compose exec -T api poetry run pytest tests/api;
          # docker compose down;
      - name: Build and push image tg
        if: ${{ (steps.tg_changed.outputs.OUTPUT != '') }}
        env:
          NAME_IMAGE_API: ${{ vars.NAME_IMAGE_API }}
          NAME_IMAGE_FRONTEND: ${{ vars.NAME_IMAGE_FRONTEND }}
          NAME_IMAGE_TELEGRAM_BOT: ${{ vars.NAME_IMAGE_TELEGRAM_BOT }}
          DEBUG: ${{ vars.DEBUG }}
          INSTALL_DEV: ${{ vars.INSTALL_DEV }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TOKEN_EXPIRY_TIME_HOURS: ${{ vars.TOKEN_EXPIRY_TIME_HOURS }}
          FISCAL_SERVICE_HOSTNAME: ${{ vars.FISCAL_SERVICE_HOSTNAME }}
          FISCAL_SERVICE_URI: ${{ vars.FISCAL_SERVICE_URI }}
          FISCAL_SERVICE_API_URI: ${{ vars.FISCAL_SERVICE_API_URI }}
          TIME_LIFE_TEMP_LOGIN_LINK_MIN: ${{ vars.TIME_LIFE_TEMP_LOGIN_LINK_MIN }}
          FRONTEND_APP_LOGIN_LINK_PREFIX: ${{ vars.FRONTEND_APP_LOGIN_LINK_PREFIX }}
          REST_API_HOST: ${{ vars.REST_API_HOST }}
          REST_API_PORT: ${{ vars.REST_API_PORT }}
          REST_API_PREFIX: ${{ vars.REST_API_PREFIX }}
          REST_API_LOGIN_LINK_URI: ${{ vars.REST_API_LOGIN_LINK_URI }}
          DATABASE_DIALECT: ${{ vars.DATABASE_DIALECT }}
          DATABASE_DRIVER: ${{ vars.DATABASE_DRIVER }}
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          DATABASE_PORT: ${{ vars.DATABASE_PORT }}
          DATABASE_USER: ${{ vars.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ vars.DATABASE_NAME }}
          DATABASE_ECHO: ${{ vars.DATABASE_ECHO }}
          DATABASE_POOL_RECYCLE: ${{ vars.DATABASE_POOL_RECYCLE }}
          DATABASE_POOL_PRE_PING: ${{ vars.DATABASE_POOL_PRE_PING }}
          DATABASE_AUTO_FLUSH: ${{ vars.DATABASE_AUTO_FLUSH }}
          DATABASE_EXPIRE_ON_COMMIT: ${{ vars.DATABASE_EXPIRE_ON_COMMIT }}
          UNICORN_HOST: ${{ vars.UNICORN_HOST }}
          UNICORN_PORT: ${{ vars.UNICORN_PORT }}
          UNICORN_LOG_LEVEL: ${{ vars.UNICORN_LOG_LEVEL }}
          UNICORN_RELOAD: ${{ vars.UNICORN_RELOAD }}
          UNICORN_WORKERS: ${{ vars.UNICORN_WORKERS }}
          ALLOW_ORIGINS: ${{ vars.ALLOW_ORIGINS }}
          ALLOW_HEADERS: ${{ vars.ALLOW_HEADERS }}
          ALLOW_CREDENTIALS: ${{ vars.ALLOW_CREDENTIALS }}
          ALLOW_METHODS: ${{ vars.ALLOW_METHODS }}
          PGADMIN_DEFAULT_EMAIL: ${{ vars.PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_BOT_DEFAULT_LANG: ${{ vars.TELEGRAM_BOT_DEFAULT_LANG }}
          TELEGRAM_ADMIN_CHAT_ID: ${{ vars.TELEGRAM_ADMIN_CHAT_ID }}
          TELEGRAM_GRPC_HOST: ${{ vars.TELEGRAM_GRPC_HOST }}
          TELEGRAM_GRPC_PORT: ${{ vars.TELEGRAM_GRPC_PORT }}
        run: |
          docker compose build tg;
          docker compose push tg;
      - name: Build and push image frontend 
        if: ${{ (steps.frontend_changes.outputs.OUTPUT != '') }}
        env:
          NAME_IMAGE_API: ${{ vars.NAME_IMAGE_API }}:test
          NAME_IMAGE_FRONTEND: ${{ vars.NAME_IMAGE_FRONTEND }}:test
          NAME_IMAGE_TELEGRAM_BOT: ${{ vars.NAME_IMAGE_TELEGRAM_BOT }}:test
          DEBUG: ${{ vars.DEBUG }}
          INSTALL_DEV: ${{ vars.INSTALL_DEV }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TOKEN_EXPIRY_TIME_HOURS: ${{ vars.TOKEN_EXPIRY_TIME_HOURS }}
          FISCAL_SERVICE_HOSTNAME: ${{ vars.FISCAL_SERVICE_HOSTNAME }}
          FISCAL_SERVICE_URI: ${{ vars.FISCAL_SERVICE_URI }}
          FISCAL_SERVICE_API_URI: ${{ vars.FISCAL_SERVICE_API_URI }}
          TIME_LIFE_TEMP_LOGIN_LINK_MIN: ${{ vars.TIME_LIFE_TEMP_LOGIN_LINK_MIN }}
          FRONTEND_APP_LOGIN_LINK_PREFIX: ${{ vars.FRONTEND_APP_LOGIN_LINK_PREFIX }}
          REST_API_HOST: ${{ vars.REST_API_HOST }}
          REST_API_PORT: ${{ vars.REST_API_PORT }}
          REST_API_PREFIX: ${{ vars.REST_API_PREFIX }}
          REST_API_LOGIN_LINK_URI: ${{ vars.REST_API_LOGIN_LINK_URI }}
          DATABASE_DIALECT: ${{ vars.DATABASE_DIALECT }}
          DATABASE_DRIVER: ${{ vars.DATABASE_DRIVER }}
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          DATABASE_PORT: ${{ vars.DATABASE_PORT }}
          DATABASE_USER: ${{ vars.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ vars.DATABASE_NAME }}
          DATABASE_ECHO: ${{ vars.DATABASE_ECHO }}
          DATABASE_POOL_RECYCLE: ${{ vars.DATABASE_POOL_RECYCLE }}
          DATABASE_POOL_PRE_PING: ${{ vars.DATABASE_POOL_PRE_PING }}
          DATABASE_AUTO_FLUSH: ${{ vars.DATABASE_AUTO_FLUSH }}
          DATABASE_EXPIRE_ON_COMMIT: ${{ vars.DATABASE_EXPIRE_ON_COMMIT }}
          UNICORN_HOST: ${{ vars.UNICORN_HOST }}
          UNICORN_PORT: ${{ vars.UNICORN_PORT }}
          UNICORN_LOG_LEVEL: ${{ vars.UNICORN_LOG_LEVEL }}
          UNICORN_RELOAD: ${{ vars.UNICORN_RELOAD }}
          UNICORN_WORKERS: ${{ vars.UNICORN_WORKERS }}
          ALLOW_ORIGINS: ${{ vars.ALLOW_ORIGINS }}
          ALLOW_HEADERS: ${{ vars.ALLOW_HEADERS }}
          ALLOW_CREDENTIALS: ${{ vars.ALLOW_CREDENTIALS }}
          ALLOW_METHODS: ${{ vars.ALLOW_METHODS }}
          PGADMIN_DEFAULT_EMAIL: ${{ vars.PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_BOT_DEFAULT_LANG: ${{ vars.TELEGRAM_BOT_DEFAULT_LANG }}
          TELEGRAM_ADMIN_CHAT_ID: ${{ vars.TELEGRAM_ADMIN_CHAT_ID }}
          TELEGRAM_GRPC_HOST: ${{ vars.TELEGRAM_GRPC_HOST }}
          TELEGRAM_GRPC_PORT: ${{ vars.TELEGRAM_GRPC_PORT }}
          VUE_APP_ENV: ${{ vars.VUE_APP_ENV }}
          VUE_APP_THIS_HOST_API: ${{ vars.VUE_APP_THIS_HOST_API }}
          VUE_APP_PREFIX: ${{ vars.VUE_APP_PREFIX }}
          VUE_APP_API_PROD: ${{ vars.VUE_APP_API_PROD }}
          VUE_APP_API_STAG: ${{ vars.VUE_APP_API_STAG }}
          VUE_APP_API_DEV: ${{ vars.VUE_APP_API_DEV }}
        run: |
          docker compose build frontend;
          docker compose push frontend;

# - name: install docker and docker-compose
#         run: |
#           sudo apt update -y;
#           sudo apt install -y docker.io;
#           sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose;
#           sudo chmod +x /usr/local/bin/docker-compose;

  deploy-test-server:
    needs: test-build-images
    runs-on: sibecodome2
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Prepare folders and configs
        run: |
          mkdir -p /home/yaricp/docker-compose-area/test/grafana
          mkdir -p /home/yaricp/docker-compose-area/test/prometheus
      - name: Copy docker files to work folder
        run: |
          cp ./grpc_proto/* /home/yaricp/docker-compose-area/test/grpc_proto/;
          cp test-docker-compose.yml /home/yaricp/docker-compose-area/test/docker-compose.yml
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_RUNNER }}
      - name: delete old previous images
        run: |
          docker rmi ${{ vars.NAME_IMAGE_API }}:test_prev;
          # docker rmi ${{ vars.NAME_IMAGE_FRONTEND }}:test_prev;
          docker rmi ${{ vars.NAME_IMAGE_TELEGRAM_BOT }}:test_prev;
      - name: make tag to old stable version images
        run: |
          docker tag ${{ vars.NAME_IMAGE_API }}:test ${{ vars.NAME_IMAGE_API }}:test_prev;
          # docker tag ${{ vars.NAME_IMAGE_FRONTEND }}:test ${{ vars.NAME_IMAGE_FRONTEND }}:test_prev;
          docker tag ${{ vars.NAME_IMAGE_TELEGRAM_BOT }}:test ${{ vars.NAME_IMAGE_TELEGRAM_BOT }}:test_prev;
      - name: Pull new images
        env:
          NAME_IMAGE_API: ${{ vars.NAME_IMAGE_API }}:test
          NAME_IMAGE_FRONTEND: ${{ vars.NAME_IMAGE_FRONTEND }}:test
          NAME_IMAGE_TELEGRAM_BOT: ${{ vars.NAME_IMAGE_TELEGRAM_BOT }}:test
          DEBUG: ${{ vars.DEBUG }}
          INSTALL_DEV: ${{ vars.INSTALL_DEV }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TOKEN_EXPIRY_TIME_HOURS: ${{ vars.TOKEN_EXPIRY_TIME_HOURS }}
          FISCAL_SERVICE_HOSTNAME: ${{ vars.FISCAL_SERVICE_HOSTNAME }}
          FISCAL_SERVICE_URI: ${{ vars.FISCAL_SERVICE_URI }}
          FISCAL_SERVICE_API_URI: ${{ vars.FISCAL_SERVICE_API_URI }}
          TIME_LIFE_TEMP_LOGIN_LINK_MIN: ${{ vars.TIME_LIFE_TEMP_LOGIN_LINK_MIN }}
          FRONTEND_APP_LOGIN_LINK_PREFIX: ${{ vars.FRONTEND_APP_LOGIN_LINK_PREFIX }}
          REST_API_HOST: ${{ vars.REST_API_HOST }}
          REST_API_PORT: ${{ vars.REST_API_PORT }}
          REST_API_PREFIX: ${{ vars.REST_API_PREFIX }}
          REST_API_LOGIN_LINK_URI: ${{ vars.REST_API_LOGIN_LINK_URI }}
          DATABASE_DIALECT: ${{ vars.DATABASE_DIALECT }}
          DATABASE_DRIVER: ${{ vars.DATABASE_DRIVER }}
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          DATABASE_PORT: ${{ vars.DATABASE_PORT }}
          DATABASE_USER: ${{ vars.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ vars.DATABASE_NAME }}
          DATABASE_ECHO: ${{ vars.DATABASE_ECHO }}
          DATABASE_POOL_RECYCLE: ${{ vars.DATABASE_POOL_RECYCLE }}
          DATABASE_POOL_PRE_PING: ${{ vars.DATABASE_POOL_PRE_PING }}
          DATABASE_AUTO_FLUSH: ${{ vars.DATABASE_AUTO_FLUSH }}
          DATABASE_EXPIRE_ON_COMMIT: ${{ vars.DATABASE_EXPIRE_ON_COMMIT }}
          UNICORN_HOST: ${{ vars.UNICORN_HOST }}
          UNICORN_PORT: ${{ vars.UNICORN_PORT }}
          UNICORN_LOG_LEVEL: ${{ vars.UNICORN_LOG_LEVEL }}
          UNICORN_RELOAD: ${{ vars.UNICORN_RELOAD }}
          UNICORN_WORKERS: ${{ vars.UNICORN_WORKERS }}
          ALLOW_ORIGINS: ${{ vars.ALLOW_ORIGINS }}
          ALLOW_HEADERS: ${{ vars.ALLOW_HEADERS }}
          ALLOW_CREDENTIALS: ${{ vars.ALLOW_CREDENTIALS }}
          ALLOW_METHODS: ${{ vars.ALLOW_METHODS }}
          PGADMIN_DEFAULT_EMAIL: ${{ vars.PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_BOT_DEFAULT_LANG: ${{ vars.TELEGRAM_BOT_DEFAULT_LANG }}
          TELEGRAM_ADMIN_CHAT_ID: ${{ vars.TELEGRAM_ADMIN_CHAT_ID }}
          TELEGRAM_GRPC_HOST: ${{ vars.TELEGRAM_GRPC_HOST }}
          TELEGRAM_GRPC_PORT: ${{ vars.TELEGRAM_GRPC_PORT }}
        run: |
          cd /home/yaricp/docker-compose-area/test;
          docker-compose pull api tg front;
      - name: Stop old images
        env:
          NAME_IMAGE_API: ${{ vars.NAME_IMAGE_API }}:test
          NAME_IMAGE_FRONTEND: ${{ vars.NAME_IMAGE_FRONTEND }}:test
          NAME_IMAGE_TELEGRAM_BOT: ${{ vars.NAME_IMAGE_TELEGRAM_BOT }}:test
          DEBUG: ${{ vars.DEBUG }}
          INSTALL_DEV: ${{ vars.INSTALL_DEV }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TOKEN_EXPIRY_TIME_HOURS: ${{ vars.TOKEN_EXPIRY_TIME_HOURS }}
          FISCAL_SERVICE_HOSTNAME: ${{ vars.FISCAL_SERVICE_HOSTNAME }}
          FISCAL_SERVICE_URI: ${{ vars.FISCAL_SERVICE_URI }}
          FISCAL_SERVICE_API_URI: ${{ vars.FISCAL_SERVICE_API_URI }}
          TIME_LIFE_TEMP_LOGIN_LINK_MIN: ${{ vars.TIME_LIFE_TEMP_LOGIN_LINK_MIN }}
          FRONTEND_APP_LOGIN_LINK_PREFIX: ${{ vars.FRONTEND_APP_LOGIN_LINK_PREFIX }}
          REST_API_HOST: ${{ vars.REST_API_HOST }}
          REST_API_PORT: ${{ vars.REST_API_PORT }}
          REST_API_PREFIX: ${{ vars.REST_API_PREFIX }}
          REST_API_LOGIN_LINK_URI: ${{ vars.REST_API_LOGIN_LINK_URI }}
          DATABASE_DIALECT: ${{ vars.DATABASE_DIALECT }}
          DATABASE_DRIVER: ${{ vars.DATABASE_DRIVER }}
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          DATABASE_PORT: ${{ vars.DATABASE_PORT }}
          DATABASE_USER: ${{ vars.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ vars.DATABASE_NAME }}
          DATABASE_ECHO: ${{ vars.DATABASE_ECHO }}
          DATABASE_POOL_RECYCLE: ${{ vars.DATABASE_POOL_RECYCLE }}
          DATABASE_POOL_PRE_PING: ${{ vars.DATABASE_POOL_PRE_PING }}
          DATABASE_AUTO_FLUSH: ${{ vars.DATABASE_AUTO_FLUSH }}
          DATABASE_EXPIRE_ON_COMMIT: ${{ vars.DATABASE_EXPIRE_ON_COMMIT }}
          UNICORN_HOST: ${{ vars.UNICORN_HOST }}
          UNICORN_PORT: ${{ vars.UNICORN_PORT }}
          UNICORN_LOG_LEVEL: ${{ vars.UNICORN_LOG_LEVEL }}
          UNICORN_RELOAD: ${{ vars.UNICORN_RELOAD }}
          UNICORN_WORKERS: ${{ vars.UNICORN_WORKERS }}
          ALLOW_ORIGINS: ${{ vars.ALLOW_ORIGINS }}
          ALLOW_HEADERS: ${{ vars.ALLOW_HEADERS }}
          ALLOW_CREDENTIALS: ${{ vars.ALLOW_CREDENTIALS }}
          ALLOW_METHODS: ${{ vars.ALLOW_METHODS }}
          PGADMIN_DEFAULT_EMAIL: ${{ vars.PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_BOT_DEFAULT_LANG: ${{ vars.TELEGRAM_BOT_DEFAULT_LANG }}
          TELEGRAM_ADMIN_CHAT_ID: ${{ vars.TELEGRAM_ADMIN_CHAT_ID }}
          TELEGRAM_GRPC_HOST: ${{ vars.TELEGRAM_GRPC_HOST }}
          TELEGRAM_GRPC_PORT: ${{ vars.TELEGRAM_GRPC_PORT }}
        run: cd /home/yaricp/docker-compose-area/test && docker-compose down
      - name: Start new images
        env:
          NAME_IMAGE_API: ${{ vars.NAME_IMAGE_API }}:test
          NAME_IMAGE_FRONTEND: ${{ vars.NAME_IMAGE_FRONTEND }}:test
          NAME_IMAGE_TELEGRAM_BOT: ${{ vars.NAME_IMAGE_TELEGRAM_BOT }}:test
          DEBUG: ${{ vars.DEBUG }}
          INSTALL_DEV: ${{ vars.INSTALL_DEV }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TOKEN_EXPIRY_TIME_HOURS: ${{ vars.TOKEN_EXPIRY_TIME_HOURS }}
          FISCAL_SERVICE_HOSTNAME: ${{ vars.FISCAL_SERVICE_HOSTNAME }}
          FISCAL_SERVICE_URI: ${{ vars.FISCAL_SERVICE_URI }}
          FISCAL_SERVICE_API_URI: ${{ vars.FISCAL_SERVICE_API_URI }}
          TIME_LIFE_TEMP_LOGIN_LINK_MIN: ${{ vars.TIME_LIFE_TEMP_LOGIN_LINK_MIN }}
          FRONTEND_APP_LOGIN_LINK_PREFIX: ${{ vars.FRONTEND_APP_LOGIN_LINK_PREFIX }}
          REST_API_HOST: ${{ vars.REST_API_HOST }}
          REST_API_PORT: ${{ vars.REST_API_PORT }}
          REST_API_PREFIX: ${{ vars.REST_API_PREFIX }}
          REST_API_LOGIN_LINK_URI: ${{ vars.REST_API_LOGIN_LINK_URI }}
          DATABASE_DIALECT: ${{ vars.DATABASE_DIALECT }}
          DATABASE_DRIVER: ${{ vars.DATABASE_DRIVER }}
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          DATABASE_PORT: ${{ vars.DATABASE_PORT }}
          DATABASE_USER: ${{ vars.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ vars.DATABASE_NAME }}
          DATABASE_ECHO: ${{ vars.DATABASE_ECHO }}
          DATABASE_POOL_RECYCLE: ${{ vars.DATABASE_POOL_RECYCLE }}
          DATABASE_POOL_PRE_PING: ${{ vars.DATABASE_POOL_PRE_PING }}
          DATABASE_AUTO_FLUSH: ${{ vars.DATABASE_AUTO_FLUSH }}
          DATABASE_EXPIRE_ON_COMMIT: ${{ vars.DATABASE_EXPIRE_ON_COMMIT }}
          UNICORN_HOST: ${{ vars.UNICORN_HOST }}
          UNICORN_PORT: ${{ vars.UNICORN_PORT }}
          UNICORN_LOG_LEVEL: ${{ vars.UNICORN_LOG_LEVEL }}
          UNICORN_RELOAD: ${{ vars.UNICORN_RELOAD }}
          UNICORN_WORKERS: ${{ vars.UNICORN_WORKERS }}
          ALLOW_ORIGINS: ${{ vars.ALLOW_ORIGINS }}
          ALLOW_HEADERS: ${{ vars.ALLOW_HEADERS }}
          ALLOW_CREDENTIALS: ${{ vars.ALLOW_CREDENTIALS }}
          ALLOW_METHODS: ${{ vars.ALLOW_METHODS }}
          PGADMIN_DEFAULT_EMAIL: ${{ vars.PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_BOT_DEFAULT_LANG: ${{ vars.TELEGRAM_BOT_DEFAULT_LANG }}
          TELEGRAM_ADMIN_CHAT_ID: ${{ vars.TELEGRAM_ADMIN_CHAT_ID }}
          TELEGRAM_GRPC_HOST: ${{ vars.TELEGRAM_GRPC_HOST }}
          TELEGRAM_GRPC_PORT: ${{ vars.TELEGRAM_GRPC_PORT }}
          VUE_APP_ENV: ${{ vars.VUE_APP_ENV }}
          VUE_APP_THIS_HOST_API: ${{ vars.VUE_APP_THIS_HOST_API }}
          VUE_APP_PREFIX: ${{ vars.VUE_APP_PREFIX }}
          VUE_APP_API_PROD: ${{ vars.VUE_APP_API_PROD }}
          VUE_APP_API_STAG: ${{ vars.VUE_APP_API_STAG }}
          VUE_APP_API_DEV: ${{ vars.VUE_APP_API_DEV }}
        run: cd /home/yaricp/docker-compose-area/test && docker-compose up -d
      - name: Sync .env file
        env:
          NAME_IMAGE_API: ${{ vars.NAME_IMAGE_API }}:test
          NAME_IMAGE_FRONTEND: ${{ vars.NAME_IMAGE_FRONTEND }}:test
          NAME_IMAGE_TELEGRAM_BOT: ${{ vars.NAME_IMAGE_TELEGRAM_BOT }}:test
          DEBUG: ${{ vars.DEBUG }}
          INSTALL_DEV: ${{ vars.INSTALL_DEV }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TOKEN_EXPIRY_TIME_HOURS: ${{ vars.TOKEN_EXPIRY_TIME_HOURS }}
          FISCAL_SERVICE_HOSTNAME: ${{ vars.FISCAL_SERVICE_HOSTNAME }}
          FISCAL_SERVICE_URI: ${{ vars.FISCAL_SERVICE_URI }}
          FISCAL_SERVICE_API_URI: ${{ vars.FISCAL_SERVICE_API_URI }}
          TIME_LIFE_TEMP_LOGIN_LINK_MIN: ${{ vars.TIME_LIFE_TEMP_LOGIN_LINK_MIN }}
          FRONTEND_APP_LOGIN_LINK_PREFIX: ${{ vars.FRONTEND_APP_LOGIN_LINK_PREFIX }}
          REST_API_HOST: ${{ vars.REST_API_HOST }}
          REST_API_PORT: ${{ vars.REST_API_PORT }}
          REST_API_PREFIX: ${{ vars.REST_API_PREFIX }}
          REST_API_LOGIN_LINK_URI: ${{ vars.REST_API_LOGIN_LINK_URI }}
          DATABASE_DIALECT: ${{ vars.DATABASE_DIALECT }}
          DATABASE_DRIVER: ${{ vars.DATABASE_DRIVER }}
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          DATABASE_PORT: ${{ vars.DATABASE_PORT }}
          DATABASE_USER: ${{ vars.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ vars.DATABASE_NAME }}
          DATABASE_ECHO: ${{ vars.DATABASE_ECHO }}
          DATABASE_POOL_RECYCLE: ${{ vars.DATABASE_POOL_RECYCLE }}
          DATABASE_POOL_PRE_PING: ${{ vars.DATABASE_POOL_PRE_PING }}
          DATABASE_AUTO_FLUSH: ${{ vars.DATABASE_AUTO_FLUSH }}
          DATABASE_EXPIRE_ON_COMMIT: ${{ vars.DATABASE_EXPIRE_ON_COMMIT }}
          UNICORN_HOST: ${{ vars.UNICORN_HOST }}
          UNICORN_PORT: ${{ vars.UNICORN_PORT }}
          UNICORN_LOG_LEVEL: ${{ vars.UNICORN_LOG_LEVEL }}
          UNICORN_RELOAD: ${{ vars.UNICORN_RELOAD }}
          UNICORN_WORKERS: ${{ vars.UNICORN_WORKERS }}
          ALLOW_ORIGINS: ${{ vars.ALLOW_ORIGINS }}
          ALLOW_HEADERS: ${{ vars.ALLOW_HEADERS }}
          ALLOW_CREDENTIALS: ${{ vars.ALLOW_CREDENTIALS }}
          ALLOW_METHODS: ${{ vars.ALLOW_METHODS }}
          PGADMIN_DEFAULT_EMAIL: ${{ vars.PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_BOT_DEFAULT_LANG: ${{ vars.TELEGRAM_BOT_DEFAULT_LANG }}
          TELEGRAM_ADMIN_CHAT_ID: ${{ vars.TELEGRAM_ADMIN_CHAT_ID }}
          TELEGRAM_GRPC_HOST: ${{ vars.TELEGRAM_GRPC_HOST }}
          TELEGRAM_GRPC_PORT: ${{ vars.TELEGRAM_GRPC_PORT }}
          VUE_APP_ENV: ${{ vars.VUE_APP_ENV }}
          VUE_APP_THIS_HOST_API: ${{ vars.VUE_APP_THIS_HOST_API }}
          VUE_APP_PREFIX: ${{ vars.VUE_APP_PREFIX }}
          VUE_APP_API_PROD: ${{ vars.VUE_APP_API_PROD }}
          VUE_APP_API_STAG: ${{ vars.VUE_APP_API_STAG }}
          VUE_APP_API_DEV: ${{ vars.VUE_APP_API_DEV }}
        run: |
          cd /home/yaricp/docker-compose-area/test;
          var=$(docker-compose exec -T api env);
          mv .env .env_old;
          echo "$var" > .env;
          var=$(docker-compose exec -T pg env);
          echo "$var" >> .env;
          var=$(docker-compose exec -T pgadmin4 env);
          echo "$var" >> .env;
          var=$(docker-compose exec -T tg env);
          echo "$var" >> .env;
          var=$(docker-compose exec -T front env);
          echo "$var" >> .env;
          echo -e "NAME_IMAGE_API=${{ vars.NAME_IMAGE_API }}:test" >> .env;
          echo -e "NAME_IMAGE_FRONTEND=${{ vars.NAME_IMAGE_FRONTEND }}:test" >> .env;
          echo -e "NAME_IMAGE_TELEGRAM_BOT=${{ vars.NAME_IMAGE_TELEGRAM_BOT }}:test" >> .env;

