# version: "3.9"


services:
  pg:
    restart: always
    # image: postgis/postgis:latest
    image: postgres:latest
    container_name: pg
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  pgadmin4:
    image: dpage/pgadmin4:latest
    restart: always
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - pg

  api:
    restart: always
    image: ${NAME_IMAGE_API}
    container_name: api
    ports:
      - "8080:80"
    volumes:
      - ./backend/rest_api/src:/src
      - ./backend/rest_api/alembic:/alembic
      - ./grpc_proto:/grpc_proto
    build:
      context: ./backend/rest_api/
      dockerfile: Dockerfile
    env_file:
      - .env
    command: /./start.sh
    depends_on:
      - pg

  tg:
    restart: always
    image: ${NAME_IMAGE_TELEGRAM_BOT}
    container_name: tg
    env_file:
      - .env
    command: /./start.sh
    volumes:
      - ./backend/tg_bot/app:/bot
      - ./grpc_proto:/grpc_proto
    depends_on:
      - api
    build:
      context: ./backend/tg_bot


    # volumes:
    #  - ./backend/telegram_bot/logs:/app/logs
